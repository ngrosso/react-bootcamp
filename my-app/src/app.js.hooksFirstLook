import React, { useState } from 'react';
import './App.css';
import Person from './Person/Person';

const app = props => {

  const [personsState, setPersonsState] = useState({
    persons: [
      { name: "Max", age: 28 },
      { name: "Manu", age: 29 },
      { name: "Zephi", age: 25 }
    ]
    //Lo saco porque uso el handler solo para cambiar este objeto, si quiero mergearlos hay otra 
    //otherState: "Some other value"
  });

  //para que con hooks no pase que se borre el otherstate, hago "useState" ahora
  const [otherState,setOtherState] = useState("Some other value");
  //no se usa un solo pedazo enorme de state, sino varios mas pequeÃ±os

  const switchNameHandler = () => {
    //console.log("Was Clicked");
    //NO USAR!!, react no va a permitir la mutacion del estado diretamente personsState.persons[0].name = "Maximilian"
    setPersonsState({
      persons: [
        { name: "Maximilian", age: 28 },
        { name: "Manu", age: 29 },
        { name: "Zephi", age: 27 }
      ]
      //otherState = personsState.otherState //esto se hace porque hooks reemplaza todo el objeto, no solo la parte que cambio
    })
  }

  return (
    <div className="App">
      <h1>Hi, I'm a React App</h1>
      <p>This is really working</p>
      <button onClick={switchNameHandler} >Switch Name</button>
      <Person name={personsState.persons[0].name} age={personsState.persons[0].age} />
      <Person name={personsState.persons[1].name} age={personsState.persons[1].age}>My Hobbies are: Racing</Person>
      <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />
    </div>
  );
  // return React.CreateElement('div',{className:'App'},React.CreateElement('h1',null, 'I\'m a React App!!!'));
}

export default app;

